/*
 * This file is generated by jOOQ.
 */
package ngari.caroline.jooq.tables.records;


import java.time.LocalDateTime;

import ngari.caroline.jooq.tables.Sightings;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SightingsRecord extends UpdatableRecordImpl<SightingsRecord> implements Record5<Integer, Integer, String, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sightings.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>sightings.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>sightings.animal_id</code>.
     */
    public void setAnimalId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>sightings.animal_id</code>.
     */
    public Integer getAnimalId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>sightings.location</code>.
     */
    public void setLocation(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>sightings.location</code>.
     */
    public String getLocation() {
        return (String) get(2);
    }

    /**
     * Setter for <code>sightings.ranger_name</code>.
     */
    public void setRangerName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>sightings.ranger_name</code>.
     */
    public String getRangerName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>sightings.timestamp</code>.
     */
    public void setTimestamp(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>sightings.timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, String, String, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, Integer, String, String, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Sightings.SIGHTINGS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Sightings.SIGHTINGS.ANIMAL_ID;
    }

    @Override
    public Field<String> field3() {
        return Sightings.SIGHTINGS.LOCATION;
    }

    @Override
    public Field<String> field4() {
        return Sightings.SIGHTINGS.RANGER_NAME;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Sightings.SIGHTINGS.TIMESTAMP;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getAnimalId();
    }

    @Override
    public String component3() {
        return getLocation();
    }

    @Override
    public String component4() {
        return getRangerName();
    }

    @Override
    public LocalDateTime component5() {
        return getTimestamp();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getAnimalId();
    }

    @Override
    public String value3() {
        return getLocation();
    }

    @Override
    public String value4() {
        return getRangerName();
    }

    @Override
    public LocalDateTime value5() {
        return getTimestamp();
    }

    @Override
    public SightingsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public SightingsRecord value2(Integer value) {
        setAnimalId(value);
        return this;
    }

    @Override
    public SightingsRecord value3(String value) {
        setLocation(value);
        return this;
    }

    @Override
    public SightingsRecord value4(String value) {
        setRangerName(value);
        return this;
    }

    @Override
    public SightingsRecord value5(LocalDateTime value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public SightingsRecord values(Integer value1, Integer value2, String value3, String value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SightingsRecord
     */
    public SightingsRecord() {
        super(Sightings.SIGHTINGS);
    }

    /**
     * Create a detached, initialised SightingsRecord
     */
    public SightingsRecord(Integer id, Integer animalId, String location, String rangerName, LocalDateTime timestamp) {
        super(Sightings.SIGHTINGS);

        setId(id);
        setAnimalId(animalId);
        setLocation(location);
        setRangerName(rangerName);
        setTimestamp(timestamp);
        resetChangedOnNotNull();
    }
}
